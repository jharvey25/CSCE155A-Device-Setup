
# Computer Science I
**[School of Computing](https://computing.unl.edu/)**  
**[College of Engineering](https://engineering.unl.edu/)**  
**[University of Nebraska-Lincoln](https://unl.edu)**

This repository serves as a reference for helping students enrolled in CSCE
155A set up a local development environment and access files stored remotely
on the CSE server.

## Installing Python
In order to run Python scripts on your machine, you must first have a stable
version installed. You can do this by following the instructions below. Start
by reading the following notes for installing on your operating system (OS).
```
macOS
========
Macs have Python 2 installed and will default to that version. You'll still
need to download Python 3 from the website.

Windows
========
Check "Add Python 3.x.x to PATH" before clicking install now in the setup
wizard. This saves us a step and prevents some future confusion.
```
While keeping the above notes in mind, you can download Python 3 here:
https://www.python.org/downloads/

Once the installation is complete, you can verify by opening up your shell and
typing the following command exactly as it appears. ***TODO: What is a shell?***

Windows PowerShell:
```
python --version
```

macOS Terminal:
```
python3 --version
```

Note the difference between the Windows and macOS command, this is because
macOS assumes you are referring to Python 2 if you just type "python". After
hitting enter, the shell should output a line listing the version you just
installed.

```
Python 3.10.6
```

Your version may differ, but if the first digit matches you have successfully
installed Python 3!


## Code Editing
The next step is to pick a tool that lets you write and edit source code. This can be done through any plain text editor on your machine like Notepad or TextEdit. Some applications are designed with code editing in mind, and have features that are useful for viewing source code. A few popular code editors can be found below

* Vim (already on macOS) https://www.vim.org/
* VS Code https://code.visualstudio.com/
* Atom https://atom.io/
* Sublime Text https://www.sublimetext.com/

We recommend staying away from full-blown IDE's like PyCharm until you are more familiar with development environments


## Basic Unix Commands
A shell allows you to talk to your machine's OS at a much lower level than a graphical user interface (GUI). This gives you more control and lets you make changes to items extremely quickly

Most shells accept commands that are found in Unix and Unix-like environments. These commands allow you to edit files, create directories, change user permissions, and much more. There are a lot of different commands, but some commonly used ones are listed below

```
ls ............. list items in current directory
pwd .......... print current (working) directory
cd <name> ..................... change directory
clear ....... clean up shell by "erasing" output
touch <name> ................ create file (Unix)
New-Item <name> ....... create file (PowerShell)
mkdir <name> .................. create directory
rm <name>................. remove file/directory
```

Many of these these commands will need something called arguments, which let users specify what they would like to happen. Some arguments for the above commands are inside \<>


## Git/GitHub Basics
**TODO** Give rundown of creating/cloning repos, pushing commits, viewing version history, etc.


## CSE Server Access

As a student of computer science at UNL, you have access to a space on the CSE server. The CSE server currently runs a UNIX environment where students have access to various features, including program compilers, text editors, and a public HTML web page to name a few. If you continue as a student, you will find more useful feature. It is important to note: **You cannot break the CSE server** no matter how hard you try. You are limited on personal space, but have complete freedom otherwise and can only do harm to your own files. The FAQ for the school of computing is here -> https://computing.unl.edu/faq/ . You can find help with the CSE server there.

**TODO** Explain use of Secure Message Block, Virtual Private Network, etc. for accessing files stored on CSE server

### Secure Shell
`ssh` is a command that can be used in most terminals (macOS/UNIX = yes, Windows = hopefully, if not skip ahead to PuTTY). It allows the user to access remote servers and computer in a secure way, and can be used to access the CSE server. First:
1. Open a terminal
2. type `ssh [Your username here]@cse.unl.edu`
3. You will then be asked to except keys. Type `yes` and press enter
4. You should now be logged in to CSE!

![ssh Example](https://github.com/jharvey25/CSCE155A-Device-Setup/blob/main/img/sshLogin.PNG?raw=true)

From here you have access to your home directory in a UNIX environment. You can also run python from here if you wish.


## CSE Server File Access

### Secure Copy
`scp` is a command that can be used in most terminals (macOS/UNIX = yes, Windows = hopefully, if not skip ahead to winSCP). `scp` needs you to specify a source and a destination. The basic syntax that you will use is `scp [your username here]@cse.unl.edu:[path to file that you want to copy here] [path to the place you want to put the file on your machine]`

![scp Example](https://github.com/jharvey25/CSCE155A-Device-Setup/blob/main/img/scp.PNG?raw=true)

The file should appear at the path that you specified.
